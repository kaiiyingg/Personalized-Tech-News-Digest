# Pre-commit Hooks Configuration
# Automatically runs code quality checks before each commit
# Install with: pre-commit install

repos:
  # ==================== GENERAL FORMATTING ====================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        description: Remove trailing whitespace
      - id: end-of-file-fixer
        description: Ensure files end with newline
      - id: check-yaml
        description: Check YAML file syntax
      - id: check-json
        description: Check JSON file syntax
      - id: check-toml
        description: Check TOML file syntax
      - id: check-xml
        description: Check XML file syntax
      - id: check-merge-conflict
        description: Check for merge conflict markers
      - id: check-case-conflict
        description: Check for files with case conflicts
      - id: check-added-large-files
        description: Prevent large files from being committed
        args: ['--maxkb=500']
      - id: check-executables-have-shebangs
        description: Check executable files have shebangs
      - id: mixed-line-ending
        description: Replace mixed line endings

  # ==================== PYTHON CODE FORMATTING ====================
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        description: Auto-format Python code
        language_version: python3
        args: [--line-length=88]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        description: Sort Python imports
        args: [--profile=black, --line-length=88]

  # ==================== PYTHON LINTING ====================
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        description: Python linting
        additional_dependencies: [
          flake8-bugbear,
          flake8-docstrings,
          flake8-import-order,
          flake8-bandit
        ]
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  - repo: https://github.com/pycqa/pylint
    rev: v3.0.3
    hooks:
      - id: pylint
        description: Static code analysis
        args: [--disable=C0114,C0115,C0116, --max-line-length=88]

  # ==================== TYPE CHECKING ====================
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        description: Static type checking
        args: [--ignore-missing-imports, --no-strict-optional]
        additional_dependencies: [types-requests, types-python-dateutil]

  # ==================== SECURITY ====================
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        description: Security linting
        args: [-r, src/, -f, txt]
        exclude: tests/

  - repo: https://github.com/gitguardian/ggshield
    rev: v1.25.0
    hooks:
      - id: ggshield
        description: Detect secrets
        language: python
        stages: [commit]

  # ==================== DEPENDENCY SECURITY ====================
  - repo: https://github.com/pyupio/safety
    rev: 2.3.4
    hooks:
      - id: safety
        description: Check for known security vulnerabilities
        args: [--short-report]

  # ==================== DOCUMENTATION ====================
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        description: Check docstring style
        args: [--convention=google]
        exclude: tests/

  # ==================== WEB TECHNOLOGIES ====================
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        description: Format HTML, CSS, JS, JSON, YAML
        types_or: [html, css, javascript, json, yaml]
        args: [--tab-width=2, --print-width=80]

  # ==================== DOCKER ====================
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        description: Lint Dockerfile
        files: Dockerfile

  # ==================== SPELL CHECKING ====================
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        description: Check for common misspellings
        args: [--skip=htmlcov,--ignore-words-list=techpulse]

  # ==================== COMMIT MESSAGE ====================
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        description: Check commit message format
        stages: [commit-msg]

  # ==================== JUPYTER NOTEBOOKS ====================
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
        description: Format Jupyter notebooks
        additional_dependencies: [black]
      - id: nbqa-flake8
        description: Lint Jupyter notebooks
        additional_dependencies: [flake8]

# Configuration for pre-commit
default_language_version:
  python: python3.11

# Global settings
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
